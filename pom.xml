<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.helia</groupId>
    <artifactId>gateway</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>gateway</name>
    <description>gateway</description>
    <properties>
        <java.version>11</java.version>
        <kotlin.version>1.6.10</kotlin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spring-cloud.version>2021.0.2</spring-cloud.version>
        <io.springfox>3.0.0</io.springfox>
        <springdoc-openapi>1.6.8</springdoc-openapi>
        <!-- 	+++ Start line +++	Added for sonarcube analysis code       -->
        <sonar-maven-plugin.version>3.8.0.2131</sonar-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.6</jacoco-maven-plugin.version>
        <detekt.version>1.1.0</detekt.version>
        <detekt.configFile>${project.basedir}/sonar/detekt-config.yml</detekt.configFile>
        <detekt.xmlReportFile>${project.build.directory}/detekt-reports/detekt.xml</detekt.xmlReportFile>
        <sonar.kotlin.detekt.reportPaths>${detekt.xmlReportFile}</sonar.kotlin.detekt.reportPaths>
        <!-- suppress UnresolvedMavenProperty  -->
<!--        <sonar.coverage.jacoco.xmlReportPaths>${jacoco.reportFolder}/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>-->
        <!-- 	+++ End line +++	Added for sonarcube analysis code       -->
        <archunit-junit5.version>0.17.0</archunit-junit5.version>
    </properties>
    <dependencies>
        <!-- 		the start part is for resource server  -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
        </dependency>
        <!-- 		the end part is for resource server  -->
        <!-- 		the start part is for oauth2 client  -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-security</artifactId>
            <version>2.2.5.RELEASE</version>
        </dependency>
        <!-- 		the start part is for oauth2 client  -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-gateway</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-webflux-core</artifactId>
            <version>${springdoc-openapi}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-webflux-ui</artifactId>
            <version>${springdoc-openapi}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${io.springfox}</version>
        </dependency>
        <!-- 		<dependency> -->
        <!-- 			<groupId>org.springframework.boot</groupId> -->
        <!-- 			<artifactId>spring-boot-starter-actuator</artifactId> -->
        <!-- 		</dependency> -->
        <!--  Testing dependencies  -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-contract-wiremock</artifactId>
            <scope>test</scope>
            <version>3.1.3</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit-junit5-api</artifactId>
            <version>${archunit-junit5.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit-junit5-engine</artifactId>
            <version>${archunit-junit5.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>6.10.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test-junit</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>2.1.212</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito.kotlin</groupId>
            <artifactId>mockito-kotlin</artifactId>
            <version>4.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>4.5.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock</artifactId>
            <version>2.23.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-bean-validators</artifactId>
            <version>${io.springfox}</version>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
        <testResources>
            <testResource>
                <directory>src/test/resources/</directory>
            </testResource>
            <testResource>
                <directory>src/test/features</directory>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>test-compile</id>
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                                <sourceDir>${project.basedir}/src/test/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <args>
                        <arg>-Xjsr305=strict</arg>
                    </args>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                    </compilerPlugins>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!-- 	+++ Start line +++	Added for sonarcube analysis code       -->
<!--            <plugin>-->
<!--                <groupId>org.codehaus.mojo</groupId>-->
<!--                <artifactId>properties-maven-plugin</artifactId>-->
<!--                <version>1.0.0</version>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-antrun-plugin</artifactId>-->
<!--                <version>${maven-antrun-plugin.version}</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        &lt;!&ndash;  This can be run separately with mvn antrun:run@detekt  &ndash;&gt;-->
<!--                        <id>detekt</id>-->
<!--                        <phase>verify</phase>-->
<!--                        <configuration>-->
<!--                            <target name="detekt">-->
<!--                                &lt;!&ndash;  See https://arturbosch.github.io/detekt/cli.html for more options &ndash;&gt;-->
<!--                                <java taskname="detekt" dir="${basedir}" fork="true" failonerror="true" classname="io.gitlab.arturbosch.detekt.cli.Main" classpathref="maven.plugin.classpath">-->
<!--                                    <arg value="&#45;&#45;input"/>-->
<!--                                    <arg value="${project.basedir}/src/main/kotlin"/>-->
<!--                                    <arg value="&#45;&#45;report"/>-->
<!--                                    <arg value="xml:${detekt.xmlReportFile}"/>-->
<!--                                    <arg value="&#45;&#45;config"/>-->
<!--                                    <arg value="${detekt.configFile}"/>-->
<!--                                </java>-->
<!--                            </target>-->
<!--                        </configuration>-->
<!--                        <goals>-->
<!--                            <goal>run</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--                <dependencies>-->
<!--                    <dependency>-->
<!--                        <groupId>io.gitlab.arturbosch.detekt</groupId>-->
<!--                        <artifactId>detekt-cli</artifactId>-->
<!--                        <version>${detekt.version}</version>-->
<!--                    </dependency>-->
<!--                    &lt;!&ndash;  additional 3rd party ruleset(s) can be specified here  &ndash;&gt;-->
<!--                </dependencies>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>org.sonarsource.scanner.maven</groupId>-->
<!--                <artifactId>sonar-maven-plugin</artifactId>-->
<!--                <version>${sonar-maven-plugin.version}</version>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>org.jacoco</groupId>-->
<!--                <artifactId>jacoco-maven-plugin</artifactId>-->
<!--                <version>0.8.8</version>-->
<!--            </plugin>-->
            <!-- 	+++ End line +++	Added for sonarcube analysis code       -->
        </plugins>
        <!-- 	+++ Start line +++	Added for sonarcube analysis code       -->
<!--        <pluginManagement>-->
<!--            <plugins>-->
<!--                <plugin>-->
<!--                    <groupId>org.sonarsource.scanner.maven</groupId>-->
<!--                    <artifactId>sonar-maven-plugin</artifactId>-->
<!--                    <version>${sonar-maven-plugin.version}</version>-->
<!--                </plugin>-->
<!--                <plugin>-->
<!--                    <groupId>org.jacoco</groupId>-->
<!--                    <artifactId>jacoco-maven-plugin</artifactId>-->
<!--                    <version>${jacoco-maven-plugin.version}</version>-->
<!--                    <executions>-->
<!--                        <execution>-->
<!--                            <id>pre-unit-tests</id>-->
<!--                            <goals>-->
<!--                                <goal>prepare-agent</goal>-->
<!--                            </goals>-->
<!--                        </execution>-->
<!--                        &lt;!&ndash;  Ensures that the code coverage report for unit tests is created after unit tests have been run  &ndash;&gt;-->
<!--                        <execution>-->
<!--                            <id>post-unit-test</id>-->
<!--                            <phase>test</phase>-->
<!--                            <goals>-->
<!--                                <goal>report</goal>-->
<!--                            </goals>-->
<!--                        </execution>-->
<!--                        <execution>-->
<!--                            <id>pre-integration-tests</id>-->
<!--                            <goals>-->
<!--                                <goal>prepare-agent-integration</goal>-->
<!--                            </goals>-->
<!--                        </execution>-->
<!--                        &lt;!&ndash;  Ensures that the code coverage report for integration tests is created after integration tests have been run  &ndash;&gt;-->
<!--                        <execution>-->
<!--                            <id>post-integration-tests</id>-->
<!--                            <phase>post-integration-test</phase>-->
<!--                            <goals>-->
<!--                                <goal>report-integration</goal>-->
<!--                            </goals>-->
<!--                        </execution>-->
<!--                    </executions>-->
<!--                </plugin>-->
<!--                <plugin>-->
<!--                    <groupId>org.codehaus.mojo</groupId>-->
<!--                    <artifactId>properties-maven-plugin</artifactId>-->
<!--                    <version>${properties-maven-plugin.version}</version>-->
<!--                    <executions>-->
<!--                        <execution>-->
<!--                            <phase>initialize</phase>-->
<!--                            <goals>-->
<!--                                <goal>read-project-properties</goal>-->
<!--                            </goals>-->
<!--                            <configuration>-->
<!--                                <files>-->
<!--                                    <file>sonar/sonar-project.properties</file>-->
<!--                                </files>-->
<!--                            </configuration>-->
<!--                        </execution>-->
<!--                    </executions>-->
<!--                </plugin>-->
<!--                <plugin>-->
<!--                    <groupId>org.eclipse.m2e</groupId>-->
<!--                    <artifactId>lifecycle-mapping</artifactId>-->
<!--                    <version>${lifecycle-mapping.version}</version>-->
<!--                    <configuration>-->
<!--                        <lifecycleMappingMetadata>-->
<!--                            <pluginExecutions>-->
<!--                                <pluginExecution>-->
<!--                                    <pluginExecutionFilter>-->
<!--                                        <groupId>org.jacoco</groupId>-->
<!--                                        <artifactId> jacoco-maven-plugin </artifactId>-->
<!--                                        <versionRange> ${jacoco-maven-plugin.version} </versionRange>-->
<!--                                        <goals>-->
<!--                                            <goal>prepare-agent</goal>-->
<!--                                        </goals>-->
<!--                                    </pluginExecutionFilter>-->
<!--                                    <action>-->
<!--                                        <ignore/>-->
<!--                                    </action>-->
<!--                                </pluginExecution>-->
<!--                            </pluginExecutions>-->
<!--                        </lifecycleMappingMetadata>-->
<!--                    </configuration>-->
<!--                </plugin>-->
<!--                <plugin>-->
<!--                    <groupId>org.apache.maven.plugins</groupId>-->
<!--                    <artifactId>maven-surefire-plugin</artifactId>-->
<!--                    <version>${maven-surefire-plugin.version}</version>-->
<!--                    <configuration>-->
<!--                        &lt;!&ndash;  Force alphabetical order to have a reproducible build  &ndash;&gt;-->
<!--                        <runOrder>alphabetical</runOrder>-->
<!--                        <includes>-->
<!--                            <include>**/*Test</include>-->
<!--                            <include>**/*IT</include>-->
<!--                        </includes>-->
<!--                    </configuration>-->
<!--                </plugin>-->
<!--            </plugins>-->
<!--        </pluginManagement>-->
        <!-- 	+++ End line +++	Added for sonarcube analysis code       -->
    </build>
</project>